triggered.rules = [
  ExplicitResultTypes,
  OrganizeImports,
  RemoveUnused,
  DisableSyntax,
  LeakingImplicitClassVal,
  ProcedureSyntax,
  RedundantSyntax,

  # Scapegoat-Scalafix-rules
  ArrayEquals,
  ArraysInFormat,
  ArraysToString,
  AsInstanceOf,
  AvoidSizeEqualsZero,
  AvoidSizeNotEqualsZero,
  AvoidToMinusOne,
  BigDecimalDoubleConstructor,
  BigDecimalScaleWithoutRoundingMode,
  BooleanParameter,
  BoundedByFinalType,
  BrokenOddness,
  CatchException,
  CatchExceptionImmediatelyRethrown,
  CatchFatal,
  CatchNpe,
  CatchThrowable,
  ClassNames,
  CollectionIndexOnNonIndexedSeq,
  CollectionNamingConfusion,
  CollectionNegativeIndex,
  CollectionPromotionToAny,
  ComparingFloatingPointTypes,
  ComparisonToEmptyList,
  ComparisonToEmptySet,
  ComparisonWithSelf,
  ConstantIf,
  DivideByOne,
  DoubleNegation,
  DuplicateImport,
  DuplicateMapKey,
  DuplicateSetValue,
  EitherGet,
  EmptyCaseClass,
  EmptyFor,
  EmptyIfBlock,
  EmptyInterpolatedString,
  EmptyMethod,
  EmptySynchronizedBlock,
  EmptyTryBlock,
  EmptyWhileBlock,
  FinalizerWithoutSuper,
  IllegalFormatString,
  ImpossibleOptionSizeCondition,
  IncorrectNumberOfArgsToFormat,
  IncorrectlyNamedExceptions,
  InterpolationToString,
  LonelySealedTrait,
  LooksLikeInterpolatedString,
  MapGetAndGetOrElse,
  MethodReturningAny,
  NanComparison,
  NullAssignment,
  NullParameter,
  OptionGet,
  OptionSize,
  RepeatedCaseBody,
  RepeatedIfElseBody,
  StripMarginOnRegex,
  SwallowedException,
  TryGet,
  UnnecessaryConversion,
  UnreachableCatch,
  UnsafeContains,
  UnsafeStringContains,
  UnsafeTraversableMethods,
  UnusedMethodParameter,
  VarCouldBeVal,
  VariableShadowing,
  WhileTrue
  # End Scapegoat-Scalafix-rules
]

DisableSyntax {
  #noVars = true
  noNulls = true
  noReturns = true
  noWhileLoops = true
  noFinalize = true
  noValInForComprehension = true
  ConstructorProcedureSyntax = true
  FinalObject = true
  regex = [
    {
      id = print
      pattern = "print(ln)?"
      message = "Don't use print or println."
    },
    {
      id = camelCase
      pattern = "[a-z]+_[a-z]+"
      message = "Scala code should use camelCase."
    }
  ]
}

lint.warning = [
  "DisableSyntax.print",
  "DisableSyntax.camelCase"
]

